[package]
name = "uefi-test-runner"
version = "0.2.0"
authors = ["The Rust OSDev team"]
publish = false
edition = "2021"

[dependencies]
# TODO we should let the uefi-test-runner run with and without unstable.
uefi = { path = "../uefi", features = ["alloc", "unstable"] }

log = { version = "0.4.11", default-features = false }
env_logger = { version = "0.9.0", optional = true }
qemu-exit = "3.0.0"

# TODO
[target.'cfg(target_os = "uefi")'.dependencies]
uefi-services = { path = "../uefi-services" }

[features]
# Enable the multiprocessor test. This only works if KVM is enabled.
multi_processor = []

# Build for the host with a stub UEFI implementation instead of a real
# UEFI target.
native = ["uefi/platform", "dep:env_logger"]

# Enable the PXE test.
pxe = []

# Enable the `unstable` feature of the `uefi` crate.
unstable = ["uefi/unstable"]

# Enable the TPM v1 test.
tpm_v1 = []

# Enable the TPM v2 test.
tpm_v2 = []
